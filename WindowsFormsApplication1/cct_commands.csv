Command (HEX);Command description;Command parameter length (DEC);Command parameter type;Command parameter value (DEC);Reply parameter length (DEC);Reply parameter type;Reply parameter value (DEC);Reply description;Comment
fe;Simple poll (ACK reply if successful);;;;;;;Simple poll (ACK reply if successful);
fd;Address poll ;;;;;;;Address poll ;
;;;;;1;number;;device address;
f6;Request manufacturer ID;;;;;;;Request manufacturer ID;
;;;;;?;string;;device manufacturer string;
f5;Request equipment category ID ;;;;;;;Request equipment category ID ;
;;;;;?;string;;device type string;
f4;Request product code ;;;;;;;Request product code ;
;;;;;?;string;;device product code;
f2;Request serial number ;;;;;;;Request serial number ;
;;;;;3;number;;device serial number;
f1;Request software revision ;;;;;;;Request software revision ;
;;;;;?;string;;device software version;
d9;Request Payout Hi-Lo status ;;;;;;;Request Payout Hi-Lo status ;
;;;;;1;bitfield;;status and the presence of sensors of minimum and maximum ;
;;;;;;;;Bit0=1 Coins do NOT overtake the minimum sensor (if=0 they overtake) ;
;;;;;;;;Bit1=1 Coins do NOT overtake the maximum sensor (if=0 they overtake) ;
;;;;;;;;Bit2=1 Minimum sensor present (if=0 absent) ;
;;;;;;;;Bit3=1 Maximum sensor present (if= absent ) ;
;;;;;;;;Bit4;
;;;;;;;;Bit5;
;;;;;;;;Bit6;
;;;;;;;;Bit7;
ec;Read Opto States ;;;;;;;Read Opto States ;
;;;;;1;bitfield;;status Byte of optical sensors ;
;;;;;;;;Bit 0: M1 ;
;;;;;;;;Bit 1: M2 ;
;;;;;;;;Bit 2: M3 return into hopper ;
;;;;;;;;Bit 3: LB5 right storage position ;
;;;;;;;;Bit 4: LB4 left storage position ;
;;;;;;;;Bit 5: LB2 supply exit coin ;
;;;;;;;;Bit 6: LB3 coin recover ;
;;;;;;;;Bit 7: NU ;
e7;Modify inhibit mask ;;;;;;;Modify inhibit mask ;
;inhibit mask byte 1;1;bitfield;;1;number;;ACK reply if successful;
;Bit0=1 Enable channel 1;;;;;;0;ACK;
;Bit1=1 Enable channel 2;;;;;;;;
;Bit2=1 Enable channel 3;;;;;;;;
;Bit3=1 Enable channel 4;;;;;;;;
;Bit4=1 Enable channel 5;;;;;;;;
;Bit5=1 Enable channel 6;;;;;;;;
;Bit6=1 Enable channel 7;;;;;;;;
;Bit7=1 Enable channel 8;;;;;;;;
;inhibit mask byte 2;1;bitfield;;;;;;
;Bit0=1 Enable channel 9;;;;;;;;
;Bit1=1 Enable channel 10;;;;;;;;
;Bit2=1 Enable channel 11;;;;;;;;
;Bit3=1 Enable channel 12;;;;;;;;
;Bit4=1 Enable channel 13;;;;;;;;
;Bit5=1 Enable channel 14;;;;;;;;
;Bit6=1 Enable channel 15;;;;;;;;
;Bit7=1 Enable channel 16;;;;;;;;
e6;Request inhibit mask;;;;;;;Request inhibit mask;
;;;;;1;bitfield;;inhibit mask, byte 1;
;;;;;;;;Bit0=1 Enable channel 1;
;;;;;;;;Bit1=1 Enable channel 2;
;;;;;;;;Bit2=1 Enable channel 3;
;;;;;;;;Bit3=1 Enable channel 4;
;;;;;;;;Bit4=1 Enable channel 5;
;;;;;;;;Bit5=1 Enable channel 6;
;;;;;;;;Bit6=1 Enable channel 7;
;;;;;;;;Bit7=1 Enable channel 8;
;;;;;1;bitfield;;inhibit mask, byte 2;
;;;;;;;;Bit0=1 Enable channel 9;
;;;;;;;;Bit1=1 Enable channel 10;
;;;;;;;;Bit2=1 Enable channel 11;
;;;;;;;;Bit3=1 Enable channel 12;
;;;;;;;;Bit4=1 Enable channel 13;
;;;;;;;;Bit5=1 Enable channel 14;
;;;;;;;;Bit6=1 Enable channel 15;
;;;;;;;;Bit7=1 Enable channel 16;
c5;Calculate ROM checksum ;;;;;;;Calculate ROM checksum ;
;;;;;3;number;;;
a9;Request address mode ;;;;;;;Request address mode ;
;;;;;1;number;;the address of the peripheral device;
;;;;;;;32; is set through deep-sw ;
a4;Enable Hopper ;;;;;;;Enable Hopper ;
;;1;number;;;;;;
;the hopper is qualified for payments ;;;165;;;;;
a3;Test Hopper ;;;;;;;Test Hopper. Bits reset (except bit 3 and 6) at each new qualification (command 164) or at reset (command 1);
;;;;;1;bitfield;;status byte 1;
;;;;;;;;Bit0=1 Stopped hopper for current and restarted after release.;
;;;;;;;;Bit1=1 Timeout during supply (lack of coins or blocked engine);
;;;;;;;;Bit2=1 Engine has made a release operation during the last supply;
;;;;;;;;Bit3=1 Set bit=1 at PowerOn and reset at firs valid command;
;;;;;;;;Bit4=1 Hopper disabled (disable with command 165);
;;;;;;;;Bit5=1 Hopper stopped from command 132 ("Emergency stop value");
;;;;;;;;Bit6= 1 Hopper in duty / bit=0 hopper in IDLE (waiting for commands);
;;;;;;;;Bit7= 1 Problem during coin recovery. Coin not correctly recovered.;
;;;;;1;bitfield;;status byte 2;
;;;;;;;;Bit0=1 Inductive sensors faulty coins ;
;;;;;;;;Bit1=1 Data Checksum wrong coins ;
;;;;;;;;Bit2=1 Faulty Hall sensor ;
;;;;;;;;Bit3=1 Blocked Hopper for blocked photocells LB2,LB3, M1,M2,M3. ;
;;;;;;;;Bit4=1 Blocked Hopper for current limit overtaken after three attempts. ;
;;;;;;;;Bit5=1 Blocked Hopper for polling-timeout during "purge hopper" ;
;;;;;;;;Bit6= NU ;
;;;;;;;;Bit7= NU ;
86;Dispense hopper value [amount mode];;;;;;;;
;default value [0];1;number;;1;number;;Dispense hopper value [amount mode];
;;;;0;;;;;
;default value [0];1;number;;;;0;ACK;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;value;2;number;;;;;;
86;Dispense hopper value [channel mode];;;;;;;;
;default value [0];1;number;;1;number;;Dispense hopper value [channel mode];
;;;;0;;;0;ACK;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;default value [0];1;number;;;;;;
;;;;0;;;;;
;Channel 1 value;1;number;;;;;;
;Channel 2 value;1;number;;;;;;
;Channel 3 value;1;number;;;;;;
;Channel 4 value;1;number;;;;;;
;Channel 5 value;1;number;;;;;;
;Channel 6 value;1;number;;;;;;
;Channel 7 value;1;number;;;;;;
;Channel 8 value;1;number;;;;;;
85;Request hopper polling value;;;;;;;Request hopper polling value;
;;;;;1;number;;Event Counter ;
;;;;;2;number;;the value in cent of the value amount that has to be supplied;
;;;;;2;number;;the value in cent of the supplied amount;
;;;;;1;number;;status of the hopper ;
;;;;;;;0;idle and last start of the engine has been for command 134 ;
;;;;;;;7;payment in progress, stable engine ;
;;;;;;;8;payment in progress, forward engine ;
;;;;;;;9;payment in progress, backward engine ;
84;Emergency stop value ;;;;;;;Emergency stop value ;
;;;;;2;number;;value in cent of the paid amount until the stop;
83;Request hopper coin value ;;;;;;;Request hopper coin value ;
;channel number [1?];1;number;;6;string;;coin code;
;;;;;2;number;;value in cent and counts;
82;Request indexed hopper dispense count ;;;;;;;Request indexed hopper dispense count ;
;channel;1;number;;2;number;;number of the coin supplied from that channel from the reset ;
79;Purge hopper ;;;;;;;Purge hopper ;
1f;Reprogram pocket ;;;;;;;Reprogram pocket ;
;channel number for left pocket;1;number;;1;number;;New channel number for left pocket;
;channel number for right pocket;1;number;;1;number;;New channel number for right pocket;
1e;Request pocket status ;;;;;;;Request pocket status ;
;;;;;1;number;;number of channel programmed in left pocket ;
;;;;;1;number;;number of channel programmed in right pocket;
;;;;;2;number;;coin value programmed in left pocket;
;;;;;2;number;;coin value programmed in right pocket ;
;;;;;1;bitfield;;pockets statuses;
;;;;;;;;Bit0=1 indicates that the left pocket is full ;
;;;;;;;;Bit1=1 indicates that the right pocket is full ;
;;;;;;;;Bit2;
;;;;;;;;Bit3;
;;;;;;;;Bit4;
;;;;;;;;Bit5;
;;;;;;;;Bit6;
;;;;;;;;Bit7;
04;Request Comms Revision ;;;;;;;Request Comms Revision ;
;;;;;3;string;;Comms Revision;
01;Reset device;;;;;;;Reset device;
;;;;;1;number;;replies with ACK after the execution of a soft reset;
;;;;;;;0;ACK;
